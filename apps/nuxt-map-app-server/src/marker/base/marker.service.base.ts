/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Marker as PrismaMarker } from "@prisma/client";

export class MarkerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MarkerCountArgs, "select">): Promise<number> {
    return this.prisma.marker.count(args);
  }

  async markers(args: Prisma.MarkerFindManyArgs): Promise<PrismaMarker[]> {
    return this.prisma.marker.findMany(args);
  }
  async marker(
    args: Prisma.MarkerFindUniqueArgs
  ): Promise<PrismaMarker | null> {
    return this.prisma.marker.findUnique(args);
  }
  async createMarker(args: Prisma.MarkerCreateArgs): Promise<PrismaMarker> {
    return this.prisma.marker.create(args);
  }
  async updateMarker(args: Prisma.MarkerUpdateArgs): Promise<PrismaMarker> {
    return this.prisma.marker.update(args);
  }
  async deleteMarker(args: Prisma.MarkerDeleteArgs): Promise<PrismaMarker> {
    return this.prisma.marker.delete(args);
  }
}
